plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4' // Aktuelle Protobuf-Version
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

application {
    mainClass = 'com.onlineshop.grpc.WarehouseServer'
}

group 'com.onlineshop'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.grpc:grpc-netty:1.57.2"
    implementation "io.grpc:grpc-protobuf:1.57.2"
    implementation "io.grpc:grpc-stub:1.57.2"
    implementation "com.google.protobuf:protobuf-java:4.29.3"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

// gRPC und Protobuf Konfiguration
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:4.29.3" // Die richtige Protoc-Version
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.57.2"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

tasks.withType(com.google.protobuf.gradle.GenerateProtoTask) {
    plugins {
        grpc {}
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

shadowJar {
    archiveFileName = 'warehouse-service-all.jar'
    manifest {
        attributes 'Main-Class': 'com.onlineshop.grpc.WarehouseServer'
    }
}

// Custom task for Subscriber
task runServer(type: JavaExec) {
    group = 'application'
    description = 'Run the gRPC server'
    main = 'com.onlineshop.grpc.WarehouseServer'
    classpath = sourceSets.main.runtimeClasspath
}

// Custom task for Publisher
task runClient(type: JavaExec) {
    group = 'application'
    description = 'Run the gRPC client'
    main = 'com.onlineshop.grpc.WarehouseClient'
    classpath = sourceSets.main.runtimeClasspath
}


tasks.withType(Test) {
    useJUnitPlatform()
}


